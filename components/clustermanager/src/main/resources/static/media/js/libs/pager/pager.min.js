/*
 * Copyright 2014 Alexey Plotnik
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

function (e) {
    var t = function (t, n) {
        "use strict";
        var r = function (e, t) {
            return function () {
                var r = arguments;
                return n.computed(function () {
                    return e.apply(t, r)
                })
            }
        }, i = {};
        i.page = null, i.now = function () {
            return Date.now ? Date.now() : (new Date).valueOf()
        }, i.extendWithPage = function (e) {
            var t = new i.Page;
            e.$__page__ = t, i.page = t, i.activePage$ = r(i.getActivePage, i)()
        };
        var s = function (e, t, n) {
            n = n || {}, n.page = e, i[t].fire(n), e.val(t) && e.val(t)(n)
        };
        t.each(["onBindingError", "onSourceError", "onNoMatch", "onMatch", "beforeRemove", "afterRemove", "beforeHide", "afterHide", "beforeShow", "afterShow"], function (e, n) {
            i[n] = t.Callbacks()
        }), i.showChild = function (e) {
            var t = e && e.length === 1 && e[0] === "" ? [] : e;
            i.page.showPage(t)
        }, i.getParentPage = function (e) {
            while (e) {
                if (e.$page && e.$page.val("urlToggle") !== "none")return e.$page;
                if (e.$data && e.$data.$__page__)return e.$data.$__page__;
                e = e.$parentContext
            }
            return null
        };
        var o = null, u = null, a = function (e) {
            u && u.reject({cancel: !0}), o = null, e.substring(0, i.Href.hash.length) === i.Href.hash && (e = e.slice(i.Href.hash.length));
            var t = f(e);
            i.showChild(t)
        };
        i.goTo = a, i.navigate = function (e) {
            i.useHTML5history ? i.Href5.history.pushState(null, null, e) : location.hash = e
        };
        var f = function (e) {
            return t.map(e.replace(/\+/g, " ").split("/"), decodeURIComponent)
        }, l = {};
        l.value = n.utils.unwrapObservable, l.arrayValue = function (e) {
            return t.map(e, function (e) {
                return l.value(e)
            })
        };
        var c = function (e) {
            var t, n = {}, r = /([^&=]+)=?([^&]*)/g;
            while (t = r.exec(e))n[t[1]] = t[2];
            return n
        }, h = function (e) {
            if (!e)return{name: null, params: {}};
            var t = e.split("?"), n = t[0], r = t[1], i = {};
            return r && (i = c(r)), {name: n, params: i}
        };
        i.ChildManager = function (e, r) {
            this.currentChildO = n.observable(null);
            var o = this;
            this.page = r, this.timeStamp = i.now(), this.hideChild = function () {
                var e = o.currentChildO();
                e && (e.hidePage(function () {
                }), o.currentChildO(null))
            }, this.showChild = function (n) {
                var r = n.length === 0;
                this.timeStamp = i.now();
                var u = this.timeStamp, a = o.currentChildO(), f = null, c = !1, p = h(n[0]), d = p.name, v = null;
                t.each(e(), function (e, t) {
                    if (!c) {
                        var n = t.getId();
                        if (n === d || (d === "" || d == null) && t.isStartPage())c = !0, f = t;
                        n === "?" && (v = t)
                    }
                });
                var m = !1, g = o, y = function (e, t) {
                    if (!c) {
                        var n = t.getId(), r = t.getValue().modal;
                        if (r) {
                            if (n === d || (d === "" || d == null) && t.isStartPage())c = !0, f = t, m = !0;
                            n === "?" && !v && (v = t, m = !0)
                        }
                    }
                };
                while (!f && g.page.parentPage && !g.page.getValue().modal) {
                    var b = g.page.parentPage.children;
                    t.each(b(), y), f || (g = g.page.parentPage.childManager)
                }
                !f && v && !r && (f = v), o.currentChildO(f), f && (m ? f.currentParentPage(o.page) : f.currentParentPage(null));
                var w = function () {
                    s(o.page, "onNoMatch", {route: n})
                }, E = function () {
                    s(o.page, "onMatch", {route: n});
                    var e = l.value(f.getValue().guard);
                    e ? e(f, n, function () {
                        o.timeStamp === u && f.showPage(n.slice(1), p, n[0])
                    }, a) : f.showPage(n.slice(1), p, n[0])
                };
                a && a === f ? E() : a ? a.hidePage(function () {
                    f ? E() : w()
                }) : f ? E() : w()
            }
        }, i.Page = function (e, t, r, s, o) {
            this.element = e, this.valueAccessor = t, this.allBindingsAccessor = r, this.viewModel = s, this.bindingContext = o, this.children = n.observableArray([]), this.childManager = new i.ChildManager(this.children, this), this.parentPage = null, this.currentId = null, this.getCurrentId = n.observable(), this.ctx = null, this.currentParentPage = n.observable(null), this.isVisible = n.observable(!1), this.originalRoute = n.observable(null), this.route = null
        };
        var p = i.Page.prototype;
        p.val = function (e) {
            return l.value(this.getValue()[e])
        }, p.currentChildPage = function () {
            return this.childManager.currentChildO
        }, p.find = function (e) {
            var n = l.value(e), r = this;
            if (n.substring(0, 1) === "/")r = i.page, n = n.slice(1); else while (n.substring(0, 3) === "../")r = r.currentParentPage && r.currentParentPage() ? r.currentParentPage() : r.parentPage, n = n.slice(3);
            var s = f(n);
            return t.each(s, function (e, t) {
                r = r.child(t)()
            }), r
        }, p.find$ = function (e) {
            return r(this.find, this)(e)
        };
        var d = function (e) {
            return i.useHTML5history ? t("base").attr("href") + e : i.Href.hash + e
        };
        p.path = function (e) {
            var n = this, r = l.value(e);
            if (r && typeof r == "object" && r.path && r.params && !(r instanceof i.Page)) {
                var s = r.path, o = r.params;
                return n.path(s) + "?" + t.param(o)
            }
            var u;
            if (r == null || r === "")u = n; else {
                if (!(r instanceof i.Page)) {
                    if (r.substring(0, 1) === "/") {
                        var a = i.page.getFullRoute()().join("/") + r.substring(1);
                        return d(a)
                    }
                    var f = 0;
                    while (r.substring(0, 3) === "../")f++, r = r.slice(3);
                    var c = n.getFullRoute()(), h = c.slice(0, c.length - f).join("/"), p = (h === "" ? "" : h + "/") + r;
                    return d(p)
                }
                u = r
            }
            return d(u.getFullRoute()().join("/"))
        }, p.path$ = function (e) {
            return r(this.path, this)(e)
        }, p.async = function (e, t, n, r) {
            var s = this;
            return function () {
                u && u.reject({cancel: !0});
                var a = e();
                u = a, r && r(a.state());
                var f = Math.random();
                o = f, a.done(function () {
                    r && r(a.state()), f === o && i.navigate(s.path(t))
                }), a.fail(function (e) {
                    r && r(a.state());
                    var t = e && e.cancel;
                    f === o && !t && n && i.navigate(s.path(n))
                })
            }
        }, p.showPage = function (e, t, n) {
            var r = this, i = r.currentId, s = r.pageRoute ? r.pageRoute.params : null, o = r.isVisible();
            r.currentId = t ? t.name || "" : "", r.getCurrentId(r.currentId), r.isVisible(!0), n && r.originalRoute(n), r.route = e, r.pageRoute = t, o ? (r.getId() === "?" && i !== r.currentId && r.show(), t && s !== t.params && r.setParams()) : (r.setParams(), r.show()), r.childManager.showChild(e)
        }, p.setParams = function () {
            if (this.pageRoute && this.pageRoute.params) {
                var e = this.pageRoute.params, r = this.ctx, i = this.val("params") || {};
                t.isArray(i) ? t.each(i, function (t, i) {
                    var s = e[i];
                    r[i] ? r[i](s) : r[i] = n.observable(s)
                }) : t.each(i, function (t, i) {
                    var s = e[t], o;
                    s == null ? o = l.value(i) : o = s, r[t] ? r[t](o) : r[t] = n.observable(o)
                })
            }
            if (this.pageRoute) {
                var s = this.getValue().nameParam;
                s && (typeof s == "string" ? this.ctx[s] ? this.ctx[s](this.currentId) : this.ctx[s] = n.observable(this.currentId) : s(this.currentId))
            }
        }, p.hidePage = function (e) {
            var t = this;
            "show" !== t.val("urlToggle") ? (t.hideElementWrapper(e), t.childManager.hideChild()) : e && e()
        };
        var v = function (t) {
            try {
                n.applyBindingsToDescendants(t.childBindingContext, t.element)
            } catch (r) {
                i.onBindingError.has() || e.console && e.console.error && e.console.error(r), s(t, "onBindingError", {error: r})
            }
        };
        p.init = function () {
            var e = this;
            e.cleanElement = e.element.innerHTML;
            var r = e.val("urlToggle"), i = e.val("id");
            i !== "?" && e.getCurrentId(i);
            var o = n.utils.domData.get(e.element, "__ko_pagerjsBindingData");
            if (o)return{controlsDescendantBindings: !0};
            n.utils.domData.set(e.element, "__ko_pagerjsBindingData", e), n.utils.domNodeDisposal.addDisposeCallback(e.element, function () {
                s(e, "beforeRemove"), e.parentPage && e.parentPage.children.remove(e), s(e, "afterRemove")
            });
            var u = e.getValue();
            r !== "none" && (e.parentPage = e.getParentPage(), e.parentPage.children.push(this), e.hideElement()), e.val("source") && e.loadSource(e.val("source")), e.ctx = null;
            if (u.withOnShow)e.ctx = {}, e.childBindingContext = e.bindingContext.createChildContext(e.ctx), n.utils.extend(e.childBindingContext, {$page: this}); else {
                var a = u["with"] || e.bindingContext.$observableData || e.viewModel;
                e.ctx = l.value(a), e.augmentContext();
                if (n.isObservable(a)) {
                    var f = n.observable(e.ctx);
                    e.childBindingContext = e.bindingContext.createChildContext(f), n.utils.extend(e.childBindingContext, {$page: this, $observableData: a}), v(e), a.subscribe(function () {
                        f(l.value(a))
                    })
                } else e.childBindingContext = e.bindingContext.createChildContext(e.ctx), n.utils.extend(e.childBindingContext, {$page: this, $observableData: undefined}), v(e)
            }
            if (r !== "none") {
                var c = e.parentPage;
                c.route && (c.route[0] === e.getId() || c.route.length && e.getId() === "?") && setTimeout(function () {
                    c.showPage(c.route)
                }, 0)
            } else {
                var h = function () {
                    t(e.element).is(":visible") && e.showPage([])
                };
                setTimeout(h, 0), e.getParentPage().isVisible.subscribe(function (e) {
                    e && setTimeout(h, 0)
                })
            }
            var p = e.getValue().bind;
            return n.isObservable(p) && p(e), {controlsDescendantBindings: !0}
        }, p.augmentContext = function () {
            var e = this, r = e.val("params");
            r && (t.isArray(r) ? t.each(r, function (t, r) {
                e.ctx[r] || (e.ctx[r] = n.observable())
            }) : t.each(r, function (t, i) {
                e.ctx[t] || (n.isObservable(i) ? e.ctx[t] = i : i === null ? (r[t] = n.observable(null), e.ctx[t] = n.observable(null)) : e.ctx[t] = n.observable(i))
            })), this.val("vars") && t.each(this.val("vars"), function (t, r) {
                n.isObservable(r) ? e.ctx[t] = r : e.ctx[t] = n.observable(r)
            });
            var i = this.getValue().nameParam;
            i && typeof i == "string" && !e.ctx[i] && (e.ctx[i] = n.observable(null)), this.setParams()
        }, p.getValue = function () {
            return this.valueAccessor ? l.value(this.valueAccessor()) : {}
        }, p.getParentPage = function () {
            return i.getParentPage(this.bindingContext)
        }, p.getId = function () {
            return this.val("id")
        }, p.id = function () {
            var e = this.getCurrentId();
            return e == null || e === "" ? this.getId() : e
        }, p.sourceUrl = function (e) {
            var t = this;
            return this.getId() === "?" ? n.computed(function () {
                var n;
                return t.val("deep") ? n = [t.currentId].concat(t.route).join("/") : n = t.currentId, l.value(e).replace("{1}", n)
            }) : n.computed(function () {
                return l.value(e)
            })
        }, p.loadWithOnShow = function () {
            var e = this;
            if (!e.withOnShowLoaded || e.val("sourceCache") !== !0)e.val("withOnShow")(function (r) {
                !e.val("sourceOnShow") && e.withOnShowLoaded && (n.cleanNode(t(e.element)), t(e.element).empty(), e.element.innerHTML = e.cleanElement);
                var i = e.bindingContext.createChildContext(r);
                e.ctx = r, e.childBindingContext = i, e.augmentContext(), n.utils.extend(i, {$page: e}), v(e), e.route && e.childManager.showChild(e.route)
            }, e), e.withOnShowLoaded = !0
        }, p.loadSource = function (e) {
            var r = this.getValue(), s = this, o = this.element, u = null, a = r.loader || i.loader;
            if (r.frame === "iframe") {
                var f = t("iframe", t(o));
                f.length === 0 && (f = t("<iframe></iframe>"), t(o).append(f)), a && (u = l.value(a)(s, f), u.load()), f.one("load", function () {
                    u && u.unload(), r.sourceLoaded && r.sourceLoaded(s)
                }), n.applyBindingsToNode(f[0], {attr: {src: this.sourceUrl(e)}})
            } else {
                a && (u = l.value(a)(s, s.element), u.load());
                var c = function () {
                    u && u.unload(), s.val("withOnShow") ? s.val("withOnShow") && s.loadWithOnShow() : v(s), r.sourceLoaded && r.sourceLoaded(s), s.route && s.childManager.showChild(s.route)
                };
                if (typeof l.value(e) == "string") {
                    var h = l.value(this.sourceUrl(e));
                    g(o, h, function () {
                        c()
                    }, s)
                } else {
                    var p = t(o).children();
                    l.value(e)(this, function () {
                        t.each(p, function (e, t) {
                            n.utils.domNodeDisposal.removeNode(t)
                        }), c()
                    })
                }
            }
        };
        var m = /<script\b[^<]*(?:(?!<\/script>)<[^<]*)*<\/script>/gi, g = function (e, r, i, o) {
            var u, a, f = t(e), l = r.indexOf(" ");
            l >= 0 && (u = r.slice(l, r.length), r = r.slice(0, l));
            var c = jQuery.ajax({url: r, type: "GET", dataType: "html", complete: function (e, t) {
                i && f.each(i, a || [e.responseText, t, e])
            }}).done(function (e) {
                a = arguments, t.each(f.children(), function (e, t) {
                    n.utils.domNodeDisposal.removeNode(t)
                }), f.html(u ? jQuery("<div>").append(e.replace(m, "")).find(u) : e)
            });
            return c.fail(function () {
                s(o, "onSourceError", {url: r, xhrPromise: c})
            }), f
        };
        p.show = function (t) {
            var n = this.element, r = this;
            r.showElementWrapper(t), r.val("title") && (e.document.title = r.val("title"));
            if (r.val("sourceOnShow")) {
                if (!r.val("sourceCache") || !n.__pagerLoaded__ || typeof r.val("sourceCache") == "number" && n.__pagerLoaded__ + r.val("sourceCache") * 1e3 < i.now())n.__pagerLoaded__ = i.now(), r.loadSource(r.val("sourceOnShow"))
            } else r.val("withOnShow") && r.loadWithOnShow()
        }, p.titleOrId = function () {
            return this.val("title") || this.id()
        }, p.showElementWrapper = function (e) {
            var t = this;
            s(t, "beforeShow"), t.showElement(e), t.val("scrollToTop") && t.element.scrollIntoView(), s(t, "afterShow")
        }, p.showElement = function (e) {
            this.val("showElement") ? this.val("showElement")(this, e) : this.val("fx") ? i.fx[this.val("fx")].showElement(this, e) : i.showElement ? i.showElement(this, e) : t(this.element).show(e)
        }, p.hideElementWrapper = function (e) {
            this.isVisible(!1), s(this, "beforeHide"), this.hideElement(e), s(this, "afterHide")
        }, p.hideElement = function (e) {
            this.val("hideElement") ? this.val("hideElement")(this, e) : this.val("fx") ? i.fx[this.val("fx")].hideElement(this, e) : i.hideElement ? i.hideElement(this, e) : (t(this.element).hide(), e && e())
        }, p.getFullRoute = function () {
            return this._fullRoute ? this._fullRoute : (this._fullRoute = n.computed(function () {
                var e = null;
                return this.currentParentPage && this.currentParentPage() ? (e = this.currentParentPage().getFullRoute()().slice(0), e.push(this.originalRoute() || this.getId()), e) : this.parentPage ? (e = this.parentPage.getFullRoute()().slice(0), e.push(this.originalRoute() || this.getId()), e) : []
            }, this), this._fullRoute)
        }, p.getRole = function () {
            return this.val("role") || "next"
        }, p.isStartPage = function () {
            return this.getId() === "start" || this.getRole() === "start"
        }, p.nullObject = new i.Page, p.nullObject.children = n.observableArray([]), p.child = function (e) {
            var r = this;
            return r._child == null && (r._child = {}), r._child[e] || (r._child[e] = n.computed(function () {
                var n = t.grep(this.children(), function (t) {
                    return t.id() === e
                })[0];
                return n || this.nullObject
            }, this)), r._child[e]
        }, i.getActivePage = function () {
            var e = i.page;
            while (e.currentChildPage()() != null)e = e.currentChildPage()();
            return e
        }, n.bindingHandlers.page = {init: function (e, t, n, r, s) {
            var o = null;
            return l.value(t())instanceof i.Page ? (o = l.value(t()), o.element = e, o.allBindingsAccessor == null && (o.allBindingsAccessor = n), o.viewModel == null && (o.viewModel = r), o.bindingContext == null && (o.bindingContext = s)) : o = new i.Page(e, t, n, r, s), o.init()
        }}, i.useHTML5history = !1, i.rootURI = "/", i.Href = function (e, t, r, i, s) {
            this.element = e, this.bindingContext = s, this.path = n.observable(), this.pageOrRelativePath = n.observable(t)
        };
        var y = i.Href.prototype;
        return y.getParentPage = function () {
            return i.getParentPage(this.bindingContext)
        }, y.init = function () {
            var e = this, t = e.getParentPage();
            e.path = n.computed(function () {
                var n = l.value(e.pageOrRelativePath()());
                return t.path(n)
            })
        }, i.Href.hash = "#", y.bind = function () {
            n.applyBindingsToNode(this.element, {attr: {href: this.path}})
        }, y.update = function (e) {
            this.pageOrRelativePath(e)
        }, i.Href5 = function (e, t, n, r, s) {
            i.Href.apply(this, arguments)
        }, i.Href5.prototype = new i.Href, i.Href5.history = e.History, i.Href5.prototype.bind = function () {
            var e = this;
            n.applyBindingsToNode(e.element, {attr: {href: e.path}, click: function () {
                var n = e.path();
                if (n === "" || n === "/")n = t("base").attr("href");
                i.Href5.history.pushState(null, null, n)
            }})
        }, n.bindingHandlers["page-href"] = {init: function (e, t, n, r, s) {
            var o = i.useHTML5history ? i.Href5 : i.Href, u = new o(e, t, n, r, s);
            u.init(), u.bind(), e.__ko__page = u
        }, update: function (e, t) {
            e.__ko__page.update(t)
        }}, i.fx = {}, i.fx.cssAsync = function (e) {
            return{showElement: function (n, r) {
                var i = t(n.element);
                i.addClass(e), i.show();
                var s = setInterval(function () {
                    clearInterval(s), i.addClass(e + "-in")
                }, 10), o = setInterval(function () {
                    clearInterval(o), r && r()
                }, 300)
            }, hideElement: function (n, r) {
                var i = t(n.element);
                if (!n.pageHiddenOnce)n.pageHiddenOnce = !0, i.hide(); else {
                    i.removeClass(e + "-in");
                    var s = setInterval(function () {
                        clearInterval(s), r && r(), i.hide()
                    }, 300)
                }
            }}
        }, i.fx.zoom = i.fx.cssAsync("pagerjs-fx-zoom"), i.fx.flip = i.fx.cssAsync("pagerjs-fx-flip"), i.fx.popout = i.fx.cssAsync("pagerjs-fx-popout-modal"), i.fx.jQuerySync = function (e, n) {
            return{showElement: function (n, r) {
                e.call(t(n.element), 300, r)
            }, hideElement: function (e, r) {
                n.call(t(e.element), 300, function () {
                    t(e.element).hide()
                }), r && r()
            }}
        }, i.fx.slide = i.fx.jQuerySync(t.fn.slideDown, t.fn.slideUp), i.fx.fade = i.fx.jQuerySync(t.fn.fadeIn, t.fn.fadeOut), i.startHistoryJs = function (t) {
            var n = typeof t == "string" ? t : null;
            n && i.Href5.history.pushState(null, null, n), i.Href5.history.Adapter.bind(e, "statechange", function () {
                var e = i.Href5.history.getState().url.replace(i.Href5.history.getBaseUrl(), "");
                a(e)
            }), i.Href5.history.Adapter.bind(e, "anchorchange", function () {
                var t = e.location.href.split("#")[1];
                a(t ? "#" + t : "")
            }), (!t || !t.noGo) && a(i.Href5.history.getState().url.replace(i.Href5.history.getBaseUrl(), ""))
        }, i.start = function (n) {
            var r = typeof n == "string" ? n : null;
            r && (e.location.hash = i.Href.hash + r);
            var s = function () {
                var t = e.location.href.split("#")[1];
                a(t ? "#" + t : "")
            };
            t(e).bind("hashchange", s), (!n || !n.noGo) && s()
        }, i
    }, n = e.define;
    typeof n == "function" && typeof n.amd == "object" && n.amd ? n("pager", ["knockout", "jquery"], function (e, n) {
        return t(n, e)
    }) : e.pager = t($, ko)
}
)
(window);